[
    {
        "id": "1ded039c57ee10cd",
        "type": "tab",
        "label": "WLED",
        "disabled": false,
        "info": ""
    },
    {
        "id": "9cbec1d1b04b2aa6",
        "type": "http in",
        "z": "1ded039c57ee10cd",
        "name": "Receber HTTP POST",
        "url": "/zabbix-racks",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 110,
        "y": 440,
        "wires": [
            [
                "67f6639be1db5064",
                "30a63f21c74c1cfd",
                "313a008b47702328"
            ]
        ]
    },
    {
        "id": "67f6639be1db5064",
        "type": "http response",
        "z": "1ded039c57ee10cd",
        "name": "Retorno HTTP 200",
        "statusCode": "200",
        "headers": {},
        "x": 330,
        "y": 480,
        "wires": []
    },
    {
        "id": "30a63f21c74c1cfd",
        "type": "mqtt out",
        "z": "1ded039c57ee10cd",
        "name": "Publicar no MQTT",
        "topic": "PSA/Zabbix-Alerts",
        "qos": "2",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "c6697bee029663e9",
        "x": 530,
        "y": 440,
        "wires": []
    },
    {
        "id": "3f828db9fd31b516",
        "type": "mqtt in",
        "z": "1ded039c57ee10cd",
        "name": "",
        "topic": "PSA/Zabbix-Alerts",
        "qos": "1",
        "datatype": "json",
        "broker": "c6697bee029663e9",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 730,
        "y": 440,
        "wires": [
            [
                "deb87b256623d06f",
                "8fba34402e3bfd9c"
            ]
        ]
    },
    {
        "id": "49a5f4366cd3f22a",
        "type": "mqtt out",
        "z": "1ded039c57ee10cd",
        "name": "",
        "topic": "",
        "qos": "1",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "c6697bee029663e9",
        "x": 1290,
        "y": 440,
        "wires": []
    },
    {
        "id": "f724a0b953aa42c3",
        "type": "debug",
        "z": "1ded039c57ee10cd",
        "name": "debug 7",
        "active": true,
        "tosidebar": true,
        "console": true,
        "tostatus": true,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "payload",
        "statusType": "auto",
        "x": 1310,
        "y": 400,
        "wires": []
    },
    {
        "id": "568b26cbadad260d",
        "type": "function",
        "z": "1ded039c57ee10cd",
        "name": "function 9",
        "func": "// Extrair grupo e alerta da msg.payload\nlet status = msg.payload.status;\nlet grupo = msg.payload.grupo;\nlet alerta = msg.payload.alerta;\n\n\n// Inicializar o t처pico e payload\nlet topic = '';\nlet payload = '';\n\n// Verificar o grupo e definir o t처pico\nif (grupo === \"Rack 1\") {\n    topic = 'PSA/wled/Rack1/api';\n} else if (grupo === \"Rack 2\") {\n    topic = 'PSA/wled/Rack2/api';\n} else if (grupo === \"Rack 3\") {\n    topic = 'PSA/wled/Rack3/api';\n} else if (grupo === \"Rack 4\") {\n    topic = 'PSA/wled/Rack4/api';\n} else if (grupo === \"Rack 5\") {\n    topic = 'PSA/wled/Rack5/api';\n} else if (grupo === \"Rack 6\") {\n    topic = 'PSA/wled/Rack6/api';\n} else if (grupo === \"Rack 7\") {\n    topic = 'PSA/wled/Rack7/api';\n} else if (grupo === \"Rack 8\") {\n    topic = 'PSA/wled/Rack8/api';\n} else {\n    topic = 'T처pico desconhecido'; // Caso o grupo n찾o seja reconhecido\n}\n\nlet rackServerWarning = '{\"on\":true,\"bri\":128,\"transition\":7,\"mainseg\":0,\"seg\":[{\"id\":0,\"start\":0,\"stop\":40,\"grp\":1,\"spc\":0,\"of\":0,\"on\":true,\"frz\":false,\"bri\":255,\"cct\":127,\"set\":0,\"n\":\"\",\"col\":[[255,0,0],[0,0,0],[0,0,0]],\"fx\":100,\"sx\":255,\"ix\":255,\"pal\":0,\"c1\":128,\"c2\":128,\"c3\":16,\"sel\":true,\"rev\":false,\"mi\":false,\"o1\":false,\"o2\":false,\"o3\":false,\"si\":0,\"m12\":1},{\"stop\":0},{\"stop\":0},{\"stop\":0},{\"stop\":0},{\"stop\":0},{\"stop\":0},{\"stop\":0},{\"stop\":0},{\"stop\":0},{\"stop\":0},{\"stop\":0},{\"stop\":0},{\"stop\":0},{\"stop\":0},{\"stop\":0},{\"stop\":0},{\"stop\":0},{\"stop\":0},{\"stop\":0},{\"stop\":0},{\"stop\":0},{\"stop\":0},{\"stop\":0},{\"stop\":0},{\"stop\":0},{\"stop\":0},{\"stop\":0},{\"stop\":0},{\"stop\":0},{\"stop\":0},{\"stop\":0}]}';  // Grupos de Rack1 a Rack4\nlet rackServerHigh = '{\"on\":true,\"bri\":128,\"transition\":7,\"mainseg\":0,\"seg\":[{\"id\":0,\"start\":0,\"stop\":40,\"grp\":1,\"spc\":0,\"of\":0,\"on\":true,\"frz\":false,\"bri\":255,\"cct\":127,\"set\":0,\"n\":\"\",\"col\":[[255,0,0],[0,0,0],[255,0,0]],\"fx\":28,\"sx\":255,\"ix\":255,\"pal\":0,\"c1\":128,\"c2\":128,\"c3\":16,\"sel\":true,\"rev\":false,\"mi\":false,\"o1\":false,\"o2\":false,\"o3\":false,\"si\":0,\"m12\":0},{\"stop\":0},{\"stop\":0},{\"stop\":0},{\"stop\":0},{\"stop\":0},{\"stop\":0},{\"stop\":0},{\"stop\":0},{\"stop\":0},{\"stop\":0},{\"stop\":0},{\"stop\":0},{\"stop\":0},{\"stop\":0},{\"stop\":0},{\"stop\":0},{\"stop\":0},{\"stop\":0},{\"stop\":0},{\"stop\":0},{\"stop\":0},{\"stop\":0},{\"stop\":0},{\"stop\":0},{\"stop\":0},{\"stop\":0},{\"stop\":0},{\"stop\":0},{\"stop\":0},{\"stop\":0},{\"stop\":0}]}';  // Grupos de Rack1 a Rack4\nlet rackServerAverage = '{\"on\":true,\"bri\":128,\"transition\":7,\"mainseg\":0,\"seg\":[{\"id\":0,\"start\":0,\"stop\":40,\"grp\":1,\"spc\":0,\"of\":0,\"on\":true,\"frz\":false,\"bri\":255,\"cct\":127,\"set\":0,\"n\":\"\",\"col\":[[255,137,0],[0,0,0],[0,0,0]],\"fx\":28,\"sx\":180,\"ix\":255,\"pal\":0,\"c1\":128,\"c2\":128,\"c3\":16,\"sel\":true,\"rev\":false,\"mi\":false,\"o1\":false,\"o2\":false,\"o3\":false,\"si\":0,\"m12\":0},{\"stop\":0},{\"stop\":0},{\"stop\":0},{\"stop\":0},{\"stop\":0},{\"stop\":0},{\"stop\":0},{\"stop\":0},{\"stop\":0},{\"stop\":0},{\"stop\":0},{\"stop\":0},{\"stop\":0},{\"stop\":0},{\"stop\":0},{\"stop\":0},{\"stop\":0},{\"stop\":0},{\"stop\":0},{\"stop\":0},{\"stop\":0},{\"stop\":0},{\"stop\":0},{\"stop\":0},{\"stop\":0},{\"stop\":0},{\"stop\":0},{\"stop\":0},{\"stop\":0},{\"stop\":0},{\"stop\":0}]}';  // Grupos de Rack1 a Rack4\nlet rackServerResolv = '{\"on\":true,\"bri\":128,\"transition\":7,\"mainseg\":2,\"seg\":[{\"id\":0,\"start\":0,\"stop\":40,\"grp\":1,\"spc\":0,\"of\":0,\"on\":true,\"frz\":false,\"bri\":255,\"cct\":127,\"set\":0,\"col\":[[9,255,0],[0,0,0],[0,0,0]],\"fx\":50,\"sx\":100,\"ix\":194,\"pal\":0,\"c1\":128,\"c2\":128,\"c3\":16,\"sel\":false,\"rev\":false,\"mi\":false,\"o1\":false,\"o2\":false,\"o3\":false,\"si\":0,\"m12\":0},{\"id\":1,\"start\":0,\"stop\":40,\"grp\":1,\"spc\":0,\"of\":0,\"on\":true,\"frz\":false,\"bri\":255,\"cct\":127,\"set\":0,\"col\":[[255,0,13],[0,0,0],[0,0,0]],\"fx\":50,\"sx\":100,\"ix\":167,\"pal\":0,\"c1\":128,\"c2\":128,\"c3\":16,\"sel\":false,\"rev\":false,\"mi\":false,\"o1\":false,\"o2\":true,\"o3\":false,\"si\":0,\"m12\":0},{\"id\":2,\"start\":0,\"stop\":40,\"grp\":1,\"spc\":0,\"of\":0,\"on\":true,\"frz\":false,\"bri\":255,\"cct\":127,\"set\":0,\"col\":[[17,255,0],[8,255,0],[0,0,0]],\"fx\":50,\"sx\":100,\"ix\":28,\"pal\":0,\"c1\":128,\"c2\":128,\"c3\":16,\"sel\":true,\"rev\":false,\"mi\":false,\"o1\":false,\"o2\":true,\"o3\":false,\"si\":0,\"m12\":0},{\"stop\":0},{\"stop\":0},{\"stop\":0},{\"stop\":0},{\"stop\":0},{\"stop\":0},{\"stop\":0},{\"stop\":0},{\"stop\":0},{\"stop\":0},{\"stop\":0},{\"stop\":0},{\"stop\":0},{\"stop\":0},{\"stop\":0},{\"stop\":0},{\"stop\":0},{\"stop\":0},{\"stop\":0},{\"stop\":0},{\"stop\":0},{\"stop\":0},{\"stop\":0},{\"stop\":0},{\"stop\":0},{\"stop\":0},{\"stop\":0},{\"stop\":0},{\"stop\":0}]}';  // Grupos de Rack1 a Rack4\nlet rackServerDeploy = '{\"on\":true,\"bri\":128,\"transition\":7,\"mainseg\":0,\"seg\":[{\"id\":0,\"start\":0,\"stop\":40,\"grp\":1,\"spc\":0,\"of\":0,\"on\":true,\"frz\":false,\"bri\":255,\"cct\":127,\"set\":0,\"col\":[[0,255,200],[0,0,0],[0,0,0]],\"fx\":2,\"sx\":255,\"ix\":128,\"pal\":0,\"c1\":128,\"c2\":128,\"c3\":16,\"sel\":true,\"rev\":false,\"mi\":false,\"o1\":false,\"o2\":false,\"o3\":false,\"si\":0,\"m12\":0},{\"stop\":0},{\"stop\":0},{\"stop\":0},{\"stop\":0},{\"stop\":0},{\"stop\":0},{\"stop\":0},{\"stop\":0},{\"stop\":0},{\"stop\":0},{\"stop\":0},{\"stop\":0},{\"stop\":0},{\"stop\":0},{\"stop\":0}]}';  // Se o alerta for 'atualizacao'\n\nlet rackNetWarning = '{\"on\":true,\"bri\":128,\"transition\":7,\"mainseg\":0,\"seg\":[{\"id\":0,\"start\":0,\"stop\":160,\"grp\":1,\"spc\":0,\"of\":0,\"on\":true,\"frz\":false,\"bri\":255,\"cct\":127,\"set\":0,\"n\":\"\",\"col\":[[255,0,0],[0,0,0],[0,0,0]],\"fx\":100,\"sx\":255,\"ix\":255,\"pal\":0,\"c1\":128,\"c2\":128,\"c3\":16,\"sel\":true,\"rev\":false,\"mi\":false,\"o1\":false,\"o2\":false,\"o3\":false,\"si\":0,\"m12\":1},{\"stop\":0},{\"stop\":0},{\"stop\":0},{\"stop\":0},{\"stop\":0},{\"stop\":0},{\"stop\":0},{\"stop\":0},{\"stop\":0},{\"stop\":0},{\"stop\":0},{\"stop\":0},{\"stop\":0},{\"stop\":0},{\"stop\":0},{\"stop\":0},{\"stop\":0},{\"stop\":0},{\"stop\":0},{\"stop\":0},{\"stop\":0},{\"stop\":0},{\"stop\":0},{\"stop\":0},{\"stop\":0},{\"stop\":0},{\"stop\":0},{\"stop\":0},{\"stop\":0},{\"stop\":0},{\"stop\":0}]}';  // Grupos de Rack5 a Rack8 \nlet rackNetHigh = '{\"on\":true,\"bri\":128,\"transition\":7,\"mainseg\":0,\"seg\":[{\"id\":0,\"start\":0,\"stop\":160,\"grp\":1,\"spc\":0,\"of\":0,\"on\":true,\"frz\":false,\"bri\":124,\"cct\":127,\"set\":0,\"n\":\"\",\"col\":[[211,131,0],[211,131,0],[211,131,0]],\"fx\":50,\"sx\":136,\"ix\":255,\"pal\":50,\"c1\":128,\"c2\":128,\"c3\":16,\"sel\":true,\"rev\":false,\"mi\":false,\"o1\":false,\"o2\":false,\"o3\":false,\"si\":0,\"m12\":0},{\"id\":1,\"start\":0,\"stop\":160,\"grp\":1,\"spc\":0,\"of\":0,\"on\":true,\"frz\":false,\"bri\":255,\"cct\":127,\"set\":0,\"n\":\"\",\"col\":[[255,0,0],[0,0,0],[255,0,0]],\"fx\":48,\"sx\":149,\"ix\":157,\"pal\":0,\"c1\":128,\"c2\":128,\"c3\":16,\"sel\":false,\"rev\":false,\"mi\":false,\"o1\":false,\"o2\":true,\"o3\":true,\"si\":0,\"m12\":1},{\"stop\":0},{\"stop\":0},{\"stop\":0},{\"stop\":0},{\"stop\":0},{\"stop\":0},{\"stop\":0},{\"stop\":0},{\"stop\":0},{\"stop\":0},{\"stop\":0},{\"stop\":0},{\"stop\":0},{\"stop\":0},{\"stop\":0},{\"stop\":0},{\"stop\":0},{\"stop\":0},{\"stop\":0},{\"stop\":0},{\"stop\":0},{\"stop\":0},{\"stop\":0},{\"stop\":0},{\"stop\":0},{\"stop\":0},{\"stop\":0},{\"stop\":0},{\"stop\":0},{\"stop\":0}]}';  // Grupos de Rack5 a Rack8\nlet rackNetAverage = '{\"on\":true,\"bri\":128,\"transition\":7,\"mainseg\":1,\"seg\":[{\"id\":0,\"start\":0,\"stop\":160,\"grp\":1,\"spc\":0,\"of\":0,\"on\":true,\"frz\":false,\"bri\":124,\"cct\":127,\"set\":0,\"n\":\"\",\"col\":[[211,131,0],[211,131,0],[211,131,0]],\"fx\":50,\"sx\":136,\"ix\":255,\"pal\":50,\"c1\":128,\"c2\":128,\"c3\":16,\"sel\":false,\"rev\":false,\"mi\":false,\"o1\":false,\"o2\":false,\"o3\":false,\"si\":0,\"m12\":0},{\"id\":1,\"start\":0,\"stop\":160,\"grp\":1,\"spc\":0,\"of\":0,\"on\":true,\"frz\":false,\"bri\":255,\"cct\":127,\"set\":0,\"n\":\"\",\"col\":[[255,160,0],[0,0,0],[255,160,0]],\"fx\":48,\"sx\":149,\"ix\":157,\"pal\":0,\"c1\":128,\"c2\":128,\"c3\":16,\"sel\":true,\"rev\":false,\"mi\":false,\"o1\":false,\"o2\":true,\"o3\":true,\"si\":0,\"m12\":1},{\"stop\":0},{\"stop\":0},{\"stop\":0},{\"stop\":0},{\"stop\":0},{\"stop\":0},{\"stop\":0},{\"stop\":0},{\"stop\":0},{\"stop\":0},{\"stop\":0},{\"stop\":0},{\"stop\":0},{\"stop\":0},{\"stop\":0},{\"stop\":0},{\"stop\":0},{\"stop\":0},{\"stop\":0},{\"stop\":0},{\"stop\":0},{\"stop\":0},{\"stop\":0},{\"stop\":0},{\"stop\":0},{\"stop\":0},{\"stop\":0},{\"stop\":0},{\"stop\":0},{\"stop\":0}]}';  // Grupos de Rack5 a Rack8\nlet rackNetResolv = '{\"on\":true,\"bri\":128,\"transition\":7,\"mainseg\":1,\"seg\":[{\"id\":0,\"start\":0,\"stop\":160,\"grp\":1,\"spc\":0,\"of\":0,\"on\":true,\"frz\":false,\"bri\":124,\"cct\":127,\"set\":0,\"col\":[[188,0,0],[255,0,0],[255,0,0]],\"fx\":50,\"sx\":0,\"ix\":255,\"pal\":50,\"c1\":128,\"c2\":128,\"c3\":16,\"sel\":false,\"rev\":false,\"mi\":false,\"o1\":false,\"o2\":false,\"o3\":false,\"si\":0,\"m12\":0},{\"id\":1,\"start\":0,\"stop\":160,\"grp\":1,\"spc\":0,\"of\":0,\"on\":true,\"frz\":false,\"bri\":255,\"cct\":127,\"set\":0,\"col\":[[255,255,255],[0,0,0],[0,255,34]],\"fx\":48,\"sx\":148,\"ix\":157,\"pal\":0,\"c1\":128,\"c2\":128,\"c3\":16,\"sel\":true,\"rev\":false,\"mi\":false,\"o1\":false,\"o2\":true,\"o3\":true,\"si\":0,\"m12\":1},{\"stop\":0},{\"stop\":0},{\"stop\":0},{\"stop\":0},{\"stop\":0},{\"stop\":0},{\"stop\":0},{\"stop\":0},{\"stop\":0},{\"stop\":0},{\"stop\":0},{\"stop\":0},{\"stop\":0},{\"stop\":0},{\"stop\":0},{\"stop\":0},{\"stop\":0},{\"stop\":0},{\"stop\":0},{\"stop\":0},{\"stop\":0},{\"stop\":0},{\"stop\":0},{\"stop\":0},{\"stop\":0},{\"stop\":0},{\"stop\":0},{\"stop\":0},{\"stop\":0},{\"stop\":0}]}';  // Grupos de Rack5 a Rack8\n\n\n\n// Verificar qual Rack\nif (grupo === \"Rack 1\" || grupo === \"Rack 2\" || grupo === \"Rack 3\" || grupo === \"Rack 4\") {\n    if (alerta === \"Warning\" && status === \"PROBLEM\") {    \n        payload = rackServerWarning ;\n    } else if (alerta === \"High\" && status === \"PROBLEM\") {\n        payload = rackServerHigh;\n    } else if (alerta === \"Average\" && status === \"PROBLEM\") {\n        payload = rackServerAverage;\n    } else if (status === \"OK\") {\n         payload = rackServerResolv;\n    }\n} else if (grupo === \"Rack5\" || grupo === \"Rack 6\" || grupo === \"Rack 7\" || grupo === \"Rack 8\") {\n    if (alerta === \"Warning\" && status === \"PROBLEM\") {\n        payload = rackNetWarning;\n    } else if (alerta === \"High\" && status === \"PROBLEM\") {\n        payload = rackNetHigh;\n    } else if (alerta === \"Average\" && status === \"PROBLEM\") {\n        payload = rackNetAverage;\n    } else if (status === \"OK\") {\n        payload = rackNetResolv;\n    }\n} else {\n    payload = \"Payload n찾o reconhecida\";  // Caso o alerta n찾o seja reconhecido\n}\n\n// Atribuir topic e payload ao objeto msg\nmsg.topic = topic;\nmsg.payload = payload;\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1140,
        "y": 440,
        "wires": [
            [
                "49a5f4366cd3f22a",
                "f724a0b953aa42c3"
            ]
        ]
    },
    {
        "id": "313a008b47702328",
        "type": "debug",
        "z": "1ded039c57ee10cd",
        "name": "debug 9",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 300,
        "y": 400,
        "wires": []
    },
    {
        "id": "deb87b256623d06f",
        "type": "debug",
        "z": "1ded039c57ee10cd",
        "name": "debug 10",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 960,
        "y": 400,
        "wires": []
    },
    {
        "id": "8fba34402e3bfd9c",
        "type": "function",
        "z": "1ded039c57ee10cd",
        "name": "function 10",
        "func": "// Pega a mensagem original do payload\nlet input = msg.payload.message;\n\n// Remove as aspas extras e faz o parsing para um objeto JSON\nlet formattedString = input.replace(/\\\\\\\"/g, '\"');\nlet formattedObject = JSON.parse('{' + formattedString + '}');\n\n// Retorna a mensagem formatada\nmsg.payload = {\n    status: formattedObject.status,\n    grupo: formattedObject.grupo,\n    alerta: formattedObject.alerta\n};\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 970,
        "y": 440,
        "wires": [
            [
                "568b26cbadad260d"
            ]
        ]
    },
    {
        "id": "c6697bee029663e9",
        "type": "mqtt-broker",
        "name": "",
        "broker": "iotmqtt.santoandre.sp.gov.br",
        "port": "1883",
        "clientid": "node-red",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "autoUnsubscribe": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthRetain": "false",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closeRetain": "false",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willRetain": "false",
        "willPayload": "",
        "willMsg": {},
        "userProps": "",
        "sessionExpiry": ""
    }
]
